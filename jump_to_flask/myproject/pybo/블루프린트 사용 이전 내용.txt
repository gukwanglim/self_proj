from flask import Flask

# app 방식을 사용하면 프로젝트 규모가 커질수록 문제가 발생할 확률이 높아진다.
# 그렇기 때문에 Blueprint 방식을 사용하기 위해 이런 식으로 변경한다.
def create_app():
    app = Flask(__name__)

    @app.route('/')                    # 이런 식으로 create_app 함수에 라우팅 함수(@app.route())를 사용할 수 있다.
    def hello_pybo():                  # 대신 라우팅 함수가 계속 추가된다면 create_app 함수는 엄청나게 크고 복잡한 함수가 될 것이다
        return 'Hello, Pybo!'          # 이 문제를 해결하기 위해 블루프린트를 사용한다.
                                   # Blueprint : URL과 함수의 매핑을 관리하기 위해 사용하는 도구(클래스)이다.
    return app

# set FLASK_APP=pybo(현재 py 파일의 이름)을 사용했기 때문에 
# __init__으로 이름을 변경하고 pybo 폴더에 옮겨도  flask run을 통해 실행 가능
# 코드의 변경도 문제없음

# 하지만 그냥 pybo 폴더를 생성해서 넘기는 것이 아닌 가상 환경에서
# mkdir pybo를 실행한 후, move pybo.py pybo/__init__.py를 실행해야함